[{"D:\\Dev\\React\\poke-admin\\src\\index.js":"1","D:\\Dev\\React\\poke-admin\\src\\App.js":"2","D:\\Dev\\React\\poke-admin\\src\\AdminPanel.js":"3","D:\\Dev\\React\\poke-admin\\src\\SearchPanel.js":"4","D:\\Dev\\React\\poke-admin\\src\\data\\pokemons.js":"5","D:\\Dev\\React\\poke-admin\\src\\components\\PokemonCard.js":"6","D:\\Dev\\React\\poke-admin\\src\\components\\PokemonSlider.js":"7","D:\\Dev\\React\\poke-admin\\src\\components\\PokemonInfo.js":"8","D:\\Dev\\React\\poke-admin\\src\\styles\\index.js":"9","D:\\Dev\\React\\poke-admin\\src\\styles\\colors.js":"10","D:\\Dev\\React\\poke-admin\\src\\styles\\themes.js":"11","D:\\Dev\\React\\poke-admin\\src\\styles\\typography.js":"12","D:\\Dev\\React\\poke-admin\\src\\context\\ThemeContext.js":"13","D:\\Dev\\React\\poke-admin\\src\\context\\PokemonProvider.js":"14","D:\\Dev\\React\\poke-admin\\src\\routes\\AppRouter.js":"15","D:\\Dev\\React\\poke-admin\\src\\screens\\Pokedex.js":"16","D:\\Dev\\React\\poke-admin\\src\\screens\\Moves.js":"17","D:\\Dev\\React\\poke-admin\\src\\screens\\Items.js":"18","D:\\Dev\\React\\poke-admin\\src\\screens\\TypesRelations.js":"19","D:\\Dev\\React\\poke-admin\\src\\styles\\pokemonColors.js":"20","D:\\Dev\\React\\poke-admin\\src\\components\\SideContainer.js":"21","D:\\Dev\\React\\poke-admin\\src\\components\\PanelContainer.js":"22","D:\\Dev\\React\\poke-admin\\src\\screens\\ScreenContainer.js":"23","D:\\Dev\\React\\poke-admin\\src\\data\\types.js":"24","D:\\Dev\\React\\poke-admin\\src\\components\\DamageComparison.js":"25","D:\\Dev\\React\\poke-admin\\src\\components\\StatBar.js":"26","D:\\Dev\\React\\poke-admin\\src\\components\\TextSpan.js":"27","D:\\Dev\\React\\poke-admin\\src\\components\\ActionIcon.js":"28","D:\\Dev\\React\\poke-admin\\src\\modals\\AddPokemon.js":"29","D:\\Dev\\React\\poke-admin\\src\\modals\\EditPokemon.js":"30","D:\\Dev\\React\\poke-admin\\src\\modals\\SelectType.js":"31","D:\\Dev\\React\\poke-admin\\src\\components\\TypeButton.js":"32","D:\\Dev\\React\\poke-admin\\src\\schemas\\PokemonSchema.js":"33","D:\\Dev\\React\\poke-admin\\src\\components\\CustomFormControl.js":"34"},{"size":531,"mtime":1608154694460,"results":"35","hashOfConfig":"36"},{"size":574,"mtime":1608062292030,"results":"37","hashOfConfig":"36"},{"size":376,"mtime":1608059904449,"results":"38","hashOfConfig":"36"},{"size":1454,"mtime":1608159555332,"results":"39","hashOfConfig":"36"},{"size":44063,"mtime":1608137754330,"results":"40","hashOfConfig":"36"},{"size":1675,"mtime":1608159552618,"results":"41","hashOfConfig":"36"},{"size":1464,"mtime":1608059084852,"results":"42","hashOfConfig":"36"},{"size":3980,"mtime":1608155722636,"results":"43","hashOfConfig":"36"},{"size":119,"mtime":1607991118358,"results":"44","hashOfConfig":"36"},{"size":621,"mtime":1607960330266,"results":"45","hashOfConfig":"36"},{"size":558,"mtime":1608059000869,"results":"46","hashOfConfig":"36"},{"size":217,"mtime":1607959880268,"results":"47","hashOfConfig":"36"},{"size":423,"mtime":1608062382161,"results":"48","hashOfConfig":"36"},{"size":3919,"mtime":1608161148084,"results":"49","hashOfConfig":"36"},{"size":2578,"mtime":1608063483990,"results":"50","hashOfConfig":"36"},{"size":332,"mtime":1608062587259,"results":"51","hashOfConfig":"36"},{"size":108,"mtime":1607986454100,"results":"52","hashOfConfig":"36"},{"size":108,"mtime":1607986444013,"results":"53","hashOfConfig":"36"},{"size":3708,"mtime":1608164769603,"results":"54","hashOfConfig":"36"},{"size":420,"mtime":1607985585628,"results":"55","hashOfConfig":"36"},{"size":392,"mtime":1608062081867,"results":"56","hashOfConfig":"36"},{"size":656,"mtime":1608139986761,"results":"57","hashOfConfig":"36"},{"size":567,"mtime":1608062518508,"results":"58","hashOfConfig":"36"},{"size":4862,"mtime":1608164702144,"results":"59","hashOfConfig":"36"},{"size":1163,"mtime":1608075005576,"results":"60","hashOfConfig":"36"},{"size":1044,"mtime":1608140039038,"results":"61","hashOfConfig":"36"},{"size":249,"mtime":1608139807027,"results":"62","hashOfConfig":"36"},{"size":634,"mtime":1608146179780,"results":"63","hashOfConfig":"36"},{"size":3262,"mtime":1608232910263,"results":"64","hashOfConfig":"36"},{"size":4645,"mtime":1608233508463,"results":"65","hashOfConfig":"36"},{"size":1182,"mtime":1608163222333,"results":"66","hashOfConfig":"36"},{"size":860,"mtime":1608165141960,"results":"67","hashOfConfig":"36"},{"size":865,"mtime":1608222868488,"results":"68","hashOfConfig":"36"},{"size":1474,"mtime":1608233558676,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1a3a3de",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Dev\\React\\poke-admin\\src\\index.js",[],["142","143"],"D:\\Dev\\React\\poke-admin\\src\\App.js",[],"D:\\Dev\\React\\poke-admin\\src\\AdminPanel.js",[],"D:\\Dev\\React\\poke-admin\\src\\SearchPanel.js",[],"D:\\Dev\\React\\poke-admin\\src\\data\\pokemons.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\PokemonCard.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\PokemonSlider.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\PokemonInfo.js",[],"D:\\Dev\\React\\poke-admin\\src\\styles\\index.js",[],"D:\\Dev\\React\\poke-admin\\src\\styles\\colors.js",[],"D:\\Dev\\React\\poke-admin\\src\\styles\\themes.js",[],"D:\\Dev\\React\\poke-admin\\src\\styles\\typography.js",[],"D:\\Dev\\React\\poke-admin\\src\\context\\ThemeContext.js",[],"D:\\Dev\\React\\poke-admin\\src\\context\\PokemonProvider.js",[],"D:\\Dev\\React\\poke-admin\\src\\routes\\AppRouter.js",["144","145"],"import React, { useContext } from 'react';\r\nimport { Navbar, Nav, Form } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from 'react-router-dom';\r\nimport Items from '../screens/Items';\r\nimport Moves from '../screens/Moves';\r\nimport Pokedex from '../screens/Pokedex';\r\nimport TypesRelations from '../screens/TypesRelations';\r\nimport styled from 'styled-components';\r\nimport { ThemeModeContext } from '../context/ThemeContext';\r\nimport { dark, gray } from '../styles';\r\n\r\nconst StyledNavItem = styled.span`\r\n  color: ${(props) => props.theme.neutroTextColor};\r\n  padding-right: 0.5rem;\r\n  padding-left: 0.5rem;\r\n  display: block;\r\n`;\r\nconst StyledNavbarBrand = styled.span`\r\n  display: inline-block;\r\n  padding-top: 0.3125rem;\r\n  padding-bottom: 0.3125rem;\r\n  margin-right: 1rem;\r\n  font-size: 1.25rem;\r\n  line-height: inherit;\r\n  white-space: nowrap;\r\n`;\r\nconst SwitchButton = styled.button``;\r\nconst AppRouter = () => {\r\n  const { darkMode, changeMode } = useContext(ThemeModeContext);\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar\r\n          collapseOnSelect\r\n          expand=\"lg\"\r\n          style={{\r\n            backgroundColor: darkMode ? dark[300] : gray[100],\r\n          }}\r\n        >\r\n          <NavLink to=\"/\">\r\n            <StyledNavbarBrand>Poke-admin</StyledNavbarBrand>\r\n          </NavLink>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <StyledNavItem>\r\n                <Form.Check\r\n                  type=\"switch\"\r\n                  id=\"custom-switch\"\r\n                  label={darkMode ? 'Light' : 'Dark'}\r\n                  onClick={changeMode}\r\n                />\r\n              </StyledNavItem>\r\n              <NavLink to=\"/Items\">\r\n                <StyledNavItem>Items</StyledNavItem>\r\n              </NavLink>\r\n              <NavLink to=\"Moves\">\r\n                <StyledNavItem>Moves</StyledNavItem>\r\n              </NavLink>\r\n              <NavLink to=\"Types\">\r\n                <StyledNavItem>Types</StyledNavItem>\r\n              </NavLink>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Pokedex} />\r\n          <Route exact path=\"/items\" component={Items} />\r\n          <Route exact path=\"/moves\" component={Moves} />\r\n          <Route exact path=\"/types\" component={TypesRelations} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","D:\\Dev\\React\\poke-admin\\src\\screens\\Pokedex.js",[],"D:\\Dev\\React\\poke-admin\\src\\screens\\Moves.js",[],"D:\\Dev\\React\\poke-admin\\src\\screens\\Items.js",[],"D:\\Dev\\React\\poke-admin\\src\\screens\\TypesRelations.js",["146","147"],"import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { DAMAGE_TYPES } from '../data/types';\r\nimport DamageComparison from '../components/DamageComparison';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport SelectType from '../modals/SelectType';\r\nimport styled from 'styled-components';\r\nimport { ThemeModeContext } from '../context/ThemeContext';\r\nimport ScreenContainer from './ScreenContainer';\r\nimport TypeButton from '../components/TypeButton';\r\n\r\nconst Padding = styled.div`\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TypesRelations = () => {\r\n  const { darkMode } = useContext(ThemeModeContext);\r\n  const [showSelectType, setShowSelectType] = useState(false);\r\n  const [omitType, setOmitType] = useState('');\r\n  const [firstType, setFirstType] = useState('');\r\n  const [secondType, setSecondType] = useState('');\r\n\r\n  const [ftDDF, setFtDDF] = useState([]);\r\n  const [ftDDT, setFtDDT] = useState([]);\r\n  const [ftHDF, setFtHDF] = useState([]);\r\n  const [ftHDT, setFtHDT] = useState([]);\r\n  const [stDDF, setStDDF] = useState([]);\r\n  const [stDDT, setStDDT] = useState([]);\r\n  const [stHDF, setStHDF] = useState([]);\r\n  const [stHDT, setStHDT] = useState([]);\r\n\r\n  function handleSetType(type) {\r\n    if (firstType === '') {\r\n      setFirstType(type);\r\n      return;\r\n    }\r\n    if (secondType === '') {\r\n      setSecondType(type);\r\n    }\r\n    setShowSelectType(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (firstType !== '') {\r\n      setFtDDF(DAMAGE_TYPES[firstType]['doubleDamageFrom'] || []);\r\n      setFtDDT(DAMAGE_TYPES[firstType]['doubleDamageTo'] || []);\r\n      setFtHDF(DAMAGE_TYPES[firstType]['halfDamageFrom'] || []);\r\n      setFtHDT(DAMAGE_TYPES[firstType]['halfDamageT'] || []);\r\n    }\r\n    if (secondType !== '') {\r\n      setStDDF(DAMAGE_TYPES[secondType]['doubleDamageFrom'] || []);\r\n      setStDDT(DAMAGE_TYPES[secondType]['doubleDamageTo'] || []);\r\n      setStHDF(DAMAGE_TYPES[secondType]['halfDamageFrom'] || []);\r\n      setStHDT(DAMAGE_TYPES[secondType]['halfDamageT'] || []);\r\n    }\r\n  }, [firstType, secondType]);\r\n\r\n  const Padding = styled.div`\r\n    padding: 2rem;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `;\r\n  return (\r\n    <>\r\n      <ScreenContainer>\r\n        <Padding>\r\n          <Col className={darkMode ? 'bg-dark' : 'bg-gray'}>\r\n            <Row className=\"justify-content-center\">\r\n              <TypeButton>first</TypeButton>\r\n              <TypeButton>Second</TypeButton>\r\n            </Row>\r\n            {firstType !== '' || secondType !== '' ? (\r\n              <Container\r\n                fluid\r\n                className=\"d-flex flex-wrap justify-content-around\"\r\n              >\r\n                <DamageComparison\r\n                  label=\"Double damage from\"\r\n                  types={[...ftDDF, ...stDDF]}\r\n                />\r\n                <DamageComparison\r\n                  label=\"Double damage to\"\r\n                  types={[...ftDDT, ...stDDT]}\r\n                />\r\n                <DamageComparison\r\n                  label=\"Half damage from\"\r\n                  types={[...ftHDF, ...stHDF]}\r\n                />\r\n                <DamageComparison\r\n                  label=\"Half damage to\"\r\n                  types={[...ftHDT, ...stHDT]}\r\n                />\r\n              </Container>\r\n            ) : null}\r\n          </Col>\r\n        </Padding>\r\n      </ScreenContainer>\r\n      <SelectType\r\n        show={showSelectType}\r\n        handleSetType={handleSetType}\r\n        omit={omitType}\r\n        handleClose={() => setShowSelectType(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TypesRelations;\r\n","D:\\Dev\\React\\poke-admin\\src\\styles\\pokemonColors.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\SideContainer.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\PanelContainer.js",[],"D:\\Dev\\React\\poke-admin\\src\\screens\\ScreenContainer.js",[],"D:\\Dev\\React\\poke-admin\\src\\data\\types.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\DamageComparison.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\StatBar.js",["148"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TextSpan from './TextSpan';\r\n\r\nconst BackgroundBar = styled.span`\r\n  height: 1em;\r\n  border-radius: 2px;\r\n  box-sizing: border-box;\r\n  padding: 1px;\r\n  width: 100%;\r\n  border: 1px solid ${(props) => props.theme.borderColor};\r\n`;\r\n\r\nconst Bar = styled.span`\r\n  height: 100%;\r\n  width: ${(props) => props.percentage};\r\n  background-color: ${(props) => props.color};\r\n  display: block;\r\n`;\r\n\r\nconst StatContainer = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: start;\r\n  align-items: center;\r\n`;\r\n\r\nconst StatBar = ({ label, stat, color = 'green' }) => {\r\n  if (stat === undefined) {\r\n    throw 'stat is not defined';\r\n  }\r\n  let percentage = (stat * 100) / 255;\r\n  return (\r\n    <StatContainer>\r\n      <TextSpan>{label}</TextSpan>\r\n      <BackgroundBar>\r\n        <Bar percentage={percentage + '%'} color={color} />\r\n      </BackgroundBar>\r\n    </StatContainer>\r\n  );\r\n};\r\n\r\nexport default StatBar;\r\n","D:\\Dev\\React\\poke-admin\\src\\components\\TextSpan.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\ActionIcon.js",[],"D:\\Dev\\React\\poke-admin\\src\\modals\\AddPokemon.js",[],"D:\\Dev\\React\\poke-admin\\src\\modals\\EditPokemon.js",[],"D:\\Dev\\React\\poke-admin\\src\\modals\\SelectType.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\TypeButton.js",[],"D:\\Dev\\React\\poke-admin\\src\\schemas\\PokemonSchema.js",[],"D:\\Dev\\React\\poke-admin\\src\\components\\CustomFormControl.js",["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":5,"column":3,"nodeType":"157","messageId":"158","endLine":5,"endColumn":11},{"ruleId":"155","severity":1,"message":"159","line":33,"column":7,"nodeType":"157","messageId":"158","endLine":33,"endColumn":19},{"ruleId":"155","severity":1,"message":"160","line":12,"column":7,"nodeType":"157","messageId":"158","endLine":12,"endColumn":14},{"ruleId":"155","severity":1,"message":"161","line":22,"column":20,"nodeType":"157","messageId":"158","endLine":22,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":32,"column":5,"nodeType":"164","messageId":"165","endLine":32,"endColumn":33},{"ruleId":"155","severity":1,"message":"166","line":12,"column":23,"nodeType":"157","messageId":"158","endLine":12,"endColumn":30},{"ruleId":"155","severity":1,"message":"166","line":37,"column":23,"nodeType":"157","messageId":"158","endLine":37,"endColumn":30},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'SwitchButton' is assigned a value but never used.","'Padding' is assigned a value but never used.","'setOmitType' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'helpers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]